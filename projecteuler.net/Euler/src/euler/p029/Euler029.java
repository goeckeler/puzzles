package euler.p029;

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

/**
 * Consider all integer combinations of a^b for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:
 * 
 * <pre>
 * 2^2=4, 2^3=8, 2^4=16, 2^5=32 
 * 3^2=9, 3^3=27, 3^4=81, 3^5=243 
 * 4^2=16, 4^3=64, 4^4=256, 4^5=1024 
 * 5^2=25, 5^3=125, 5^4=625, 5^5=3125
 * </pre>
 * 
 * If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct
 * terms:
 * 
 * 4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
 * 
 * How many distinct terms are in the sequence generated by a^b for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?
 * 
 * @author Thorsten Göckeler
 */
public class Euler029
{
  public static void main(String[] args) {
    int lower = 2;
    int upper = 100;
    Set<BigDecimal> solutions = new HashSet<BigDecimal>(2 * (upper - 1) * (upper - 1));
    for (int base = lower; base <= upper; ++base) {
      for (int expo = lower; expo <= upper; ++expo) {
        BigDecimal result = BigDecimal.valueOf(base).pow(expo);
        solutions.add(result);
      }
    }

    System.out.println("There are " + solutions.size() + " distinct terms.");
  }
}
